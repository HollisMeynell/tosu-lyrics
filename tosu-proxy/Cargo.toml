[package]
name = "tosu-proxy"
version = "0.1.0"
edition = "2024"

[profile.release]
opt-level = "z"
lto = true
strip = true
codegen-units = 1

[[bin]]
name = "tosu-proxy"
path = "src/bin/old.rs"
required-features = ["old"]

[[bin]]
name = "osu-lyric"
path = "src/bin/new.rs"
required-features = ["new"]

[lints.rust]
unused = "allow"

[dependencies]
thiserror = "2.0.12"
reqwest = { version = "0.12.15", features = ["rustls-tls", "charset", "json"] }
tokio = { version = "1.44.2", features = ["fs", "rt-multi-thread", "process", "sync", "macros"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
rand = "0.9.0"
# 后续将文件打包进二进制文件?
# rust-embed="8.6.0"

async-trait = { version = "0.1.88", optional = true }
bincode = { version = "2.0.1", optional = true }
regex = { version = "1.11.1", optional = true }
config = { version = "0.15.11", optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true }
futures-util = { version = "0.3.31", optional = true }
salvo = { version = "0.77.1", features = ["default", "serve-static", "websocket"], optional = true }
sea-orm = { version = "1.1.8", features = ["sqlx-sqlite", "sqlx-mysql", "sqlx-postgres", "runtime-tokio-native-tls", "debug-print", "macros"], optional = true }
sea-schema = { version = "0.16.1", features = ["writer"], optional = true }
# old
actix-web = { version = "4.10.2", optional = true }
actix-ws = { version = "0.3.0", optional = true }
actix-cors = { version = "0.7.1", optional = true }
actix-files = { version = "0.6.6", optional = true }

[features]
default = []
new = [
    "async-trait",
    "bincode",
    "regex",
    "config",
    "tracing",
    "salvo",
    "tracing-subscriber",
    "futures-util",
    "sea-orm",
    "sea-schema",
]
old = [
    "actix-web",
    "actix-ws",
    "actix-cors",
    "actix-files",
]
